{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Apps Gestion\\\\Gestionando\\\\client\\\\src\\\\components\\\\IncomeStatement.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Table, Thead, Tbody, Tr, Th, Td, Heading, Text, Stat, StatLabel, StatNumber, StatHelpText, StatArrow, useToast } from '@chakra-ui/react';\nimport { getTransactions } from '../services/transactionService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IncomeStatement = () => {\n  _s();\n  const [data, setData] = useState({\n    totalIncome: 0,\n    totalExpenses: 0,\n    netIncome: 0,\n    period: 'Current Month'\n  });\n  const [transactions, setTransactions] = useState([]);\n  const toast = useToast();\n  useEffect(() => {\n    loadTransactions();\n  }, []);\n  const loadTransactions = async () => {\n    try {\n      const fetchedTransactions = await getTransactions();\n      setTransactions(fetchedTransactions);\n      calculateIncomeStatement(fetchedTransactions);\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: 'Failed to load transactions',\n        status: 'error',\n        duration: 3000,\n        isClosable: true\n      });\n    }\n  };\n  const calculateIncomeStatement = transactions => {\n    const now = new Date();\n    const currentMonth = now.getMonth();\n    const currentYear = now.getFullYear();\n    const filteredTransactions = transactions.filter(transaction => {\n      const transactionDate = new Date(transaction.date);\n      return transactionDate.getMonth() === currentMonth && transactionDate.getFullYear() === currentYear;\n    });\n    const totalIncome = filteredTransactions.filter(t => t.type === 'income').reduce((sum, t) => sum + t.amount, 0);\n    const totalExpenses = filteredTransactions.filter(t => t.type === 'expense').reduce((sum, t) => sum + t.amount, 0);\n    const netIncome = totalIncome - totalExpenses;\n    setData({\n      totalIncome,\n      totalExpenses,\n      netIncome,\n      period: `${now.toLocaleString('default', {\n        month: 'long'\n      })} ${currentYear}`\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 6,\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      mb: 6,\n      children: \"Income Statement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mb: 8,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"lg\",\n        mb: 4,\n        children: [\"Period: \", data.period]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        gap: 6,\n        mb: 8,\n        children: [/*#__PURE__*/_jsxDEV(Stat, {\n          children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n            children: \"Total Income\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n            children: [\"$\", data.totalIncome.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n            children: [/*#__PURE__*/_jsxDEV(StatArrow, {\n              type: \"increase\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), \"All income sources\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stat, {\n          children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n            children: \"Total Expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n            children: [\"$\", data.totalExpenses.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n            children: [/*#__PURE__*/_jsxDEV(StatArrow, {\n              type: \"decrease\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), \"All expenses\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stat, {\n          children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n            children: \"Net Income\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n            color: data.netIncome >= 0 ? 'green.500' : 'red.500',\n            children: [\"$\", data.netIncome.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n            children: [/*#__PURE__*/_jsxDEV(StatArrow, {\n              type: data.netIncome >= 0 ? 'increase' : 'decrease'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), data.netIncome >= 0 ? 'Profit' : 'Loss']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      variant: \"simple\",\n      children: [/*#__PURE__*/_jsxDEV(Thead, {\n        children: /*#__PURE__*/_jsxDEV(Tr, {\n          children: [/*#__PURE__*/_jsxDEV(Th, {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            isNumeric: true,\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n        children: transactions.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime()).map(transaction => /*#__PURE__*/_jsxDEV(Tr, {\n          children: [/*#__PURE__*/_jsxDEV(Td, {\n            children: new Date(transaction.date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Td, {\n            children: transaction.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Td, {\n            children: transaction.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Td, {\n            children: transaction.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Td, {\n            isNumeric: true,\n            color: transaction.type === 'income' ? 'green.500' : 'red.500',\n            children: [\"$\", transaction.amount.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this)]\n        }, transaction.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(IncomeStatement, \"pcURitZi9uxJkaMLRuzoJsAJIJw=\", false, function () {\n  return [useToast];\n});\n_c = IncomeStatement;\nexport default IncomeStatement;\nvar _c;\n$RefreshReg$(_c, \"IncomeStatement\");","map":{"version":3,"names":["React","useEffect","useState","Box","Table","Thead","Tbody","Tr","Th","Td","Heading","Text","Stat","StatLabel","StatNumber","StatHelpText","StatArrow","useToast","getTransactions","jsxDEV","_jsxDEV","IncomeStatement","_s","data","setData","totalIncome","totalExpenses","netIncome","period","transactions","setTransactions","toast","loadTransactions","fetchedTransactions","calculateIncomeStatement","error","title","description","status","duration","isClosable","now","Date","currentMonth","getMonth","currentYear","getFullYear","filteredTransactions","filter","transaction","transactionDate","date","t","type","reduce","sum","amount","toLocaleString","month","p","children","mb","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","display","gap","toFixed","color","variant","isNumeric","sort","a","b","getTime","map","toLocaleDateString","category","id","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/Apps Gestion/Gestionando/client/src/components/IncomeStatement.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Box,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Heading,\r\n  Text,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  StatHelpText,\r\n  StatArrow,\r\n  useToast,\r\n} from '@chakra-ui/react';\r\nimport { getTransactions } from '../services/transactionService';\r\nimport { Transaction } from '../services/transactionService';\r\n\r\ninterface IncomeStatementData {\r\n  totalIncome: number;\r\n  totalExpenses: number;\r\n  netIncome: number;\r\n  period: string;\r\n}\r\n\r\nconst IncomeStatement: React.FC = () => {\r\n  const [data, setData] = useState<IncomeStatementData>({\r\n    totalIncome: 0,\r\n    totalExpenses: 0,\r\n    netIncome: 0,\r\n    period: 'Current Month',\r\n  });\r\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    loadTransactions();\r\n  }, []);\r\n\r\n  const loadTransactions = async () => {\r\n    try {\r\n      const fetchedTransactions = await getTransactions();\r\n      setTransactions(fetchedTransactions);\r\n      calculateIncomeStatement(fetchedTransactions);\r\n    } catch (error) {\r\n      toast({\r\n        title: 'Error',\r\n        description: 'Failed to load transactions',\r\n        status: 'error',\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const calculateIncomeStatement = (transactions: Transaction[]) => {\r\n    const now = new Date();\r\n    const currentMonth = now.getMonth();\r\n    const currentYear = now.getFullYear();\r\n\r\n    const filteredTransactions = transactions.filter(transaction => {\r\n      const transactionDate = new Date(transaction.date);\r\n      return (\r\n        transactionDate.getMonth() === currentMonth &&\r\n        transactionDate.getFullYear() === currentYear\r\n      );\r\n    });\r\n\r\n    const totalIncome = filteredTransactions\r\n      .filter(t => t.type === 'income')\r\n      .reduce((sum, t) => sum + t.amount, 0);\r\n\r\n    const totalExpenses = filteredTransactions\r\n      .filter(t => t.type === 'expense')\r\n      .reduce((sum, t) => sum + t.amount, 0);\r\n\r\n    const netIncome = totalIncome - totalExpenses;\r\n\r\n    setData({\r\n      totalIncome,\r\n      totalExpenses,\r\n      netIncome,\r\n      period: `${now.toLocaleString('default', { month: 'long' })} ${currentYear}`,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box p={6}>\r\n      <Heading mb={6}>Income Statement</Heading>\r\n      \r\n      <Box mb={8}>\r\n        <Text fontSize=\"lg\" mb={4}>\r\n          Period: {data.period}\r\n        </Text>\r\n        \r\n        <Box display=\"flex\" gap={6} mb={8}>\r\n          <Stat>\r\n            <StatLabel>Total Income</StatLabel>\r\n            <StatNumber>${data.totalIncome.toFixed(2)}</StatNumber>\r\n            <StatHelpText>\r\n              <StatArrow type=\"increase\" />\r\n              All income sources\r\n            </StatHelpText>\r\n          </Stat>\r\n\r\n          <Stat>\r\n            <StatLabel>Total Expenses</StatLabel>\r\n            <StatNumber>${data.totalExpenses.toFixed(2)}</StatNumber>\r\n            <StatHelpText>\r\n              <StatArrow type=\"decrease\" />\r\n              All expenses\r\n            </StatHelpText>\r\n          </Stat>\r\n\r\n          <Stat>\r\n            <StatLabel>Net Income</StatLabel>\r\n            <StatNumber color={data.netIncome >= 0 ? 'green.500' : 'red.500'}>\r\n              ${data.netIncome.toFixed(2)}\r\n            </StatNumber>\r\n            <StatHelpText>\r\n              <StatArrow type={data.netIncome >= 0 ? 'increase' : 'decrease'} />\r\n              {data.netIncome >= 0 ? 'Profit' : 'Loss'}\r\n            </StatHelpText>\r\n          </Stat>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Table variant=\"simple\">\r\n        <Thead>\r\n          <Tr>\r\n            <Th>Date</Th>\r\n            <Th>Type</Th>\r\n            <Th>Description</Th>\r\n            <Th>Category</Th>\r\n            <Th isNumeric>Amount</Th>\r\n          </Tr>\r\n        </Thead>\r\n        <Tbody>\r\n          {transactions\r\n            .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\r\n            .map((transaction) => (\r\n              <Tr key={transaction.id}>\r\n                <Td>{new Date(transaction.date).toLocaleDateString()}</Td>\r\n                <Td>{transaction.type}</Td>\r\n                <Td>{transaction.description}</Td>\r\n                <Td>{transaction.category}</Td>\r\n                <Td isNumeric color={transaction.type === 'income' ? 'green.500' : 'red.500'}>\r\n                  ${transaction.amount.toFixed(2)}\r\n                </Td>\r\n              </Tr>\r\n            ))}\r\n        </Tbody>\r\n      </Table>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default IncomeStatement; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}